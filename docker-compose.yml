version: '3.5'
services:
  postgres:
    build:
      context: ./docker/postgres
    ports:
      - 5432:5432
    networks:
      - back
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'local'
      PGDATA: '/var/lib/postgresql/data/pgdata'
    volumes:
      - ./db/postgres:/var/lib/postgresql/data/pgdata

  redis:
    build: './docker/redis'
    ports:
      - 6379:6379
    networks:
      - back

  mailer:
    image: mailhog/mailhog:v1.0.1
    environment:
      MH_CORS_ORIGIN: '*'
    ports:
      - 8025:8025
    networks:
      - back

  #  TODO
  #  s3:
  #    image: minio/minio:edge
  #    networks:
  #      - back
  #    command: 'server /data'
  #    volumes:
  #      - ./db/s3:/data
  #    ports:
  #      - 9000:9000
  #
  #  # pass BUCKET env var with bucket name to create
  #  s3-init:
  #    image: minio/mc:edge
  #    networks:
  #      - back
  #    environment:
  #      MINIO_URL: http://s3:9000
  #      MINIO_ACCESS_KEY: minioadmin
  #      MINIO_SECRET_KEY: minioadmin
  #    entrypoint:
  #      ['sh', '-c', 'mc alias set minio $$MINIO_URL $$MINIO_ACCESS_KEY $$MINIO_SECRET_KEY && mc mb minio/$$BUCKET']
  #    depends_on:
  #      - s3

  api:
    build:
      dockerfile: ./docker/api/Dockerfile
      context: .
    volumes:
      - ./api:/app/api
      - ./shared:/app/shared:ro
    command: 'sh -c "pm2-runtime start ../pm2-api.json | pino-pretty"'
    tty: true
    env_file: ./api/.env
    environment:
      PORT: 8080
    ports:
      - 8080:8080
    networks:
      - back
    depends_on:
      - redis
      - postgres
      - mailer
      - worker

  worker:
    build:
      dockerfile: ./docker/api/Dockerfile
      context: .
    volumes:
      - ./api:/app/api
      - ./shared:/app/shared:ro
    command: 'sh -c "pm2-runtime start ../pm2-worker.json | pino-pretty"'
    tty: true
    env_file: ./api/.env
    environment:
      APP_WORKER: 'true'
      # TODO
      # AWS_ACCESS_KEY_ID: minioadmin
      # AWS_SECRET_ACCESS_KEY: minioadmin
      # AWS_ENDPOINT: http://s3:9000/minio
      # AWS_REGION:
    networks:
      - back
    depends_on:
      - redis
      - postgres
      - mailer
      # - s3

  dashboard:
    build:
      dockerfile: ./docker/dashboard/Dockerfile
      context: .
    volumes:
      - ./dashboard:/app/dashboard
      - ./docker/dashboard/dev.env.js:/app/dashboard/src/assets/env.js:ro
      - ./shared:/app/shared:ro
    tty: true
    ports:
      - 4200:4200
    depends_on:
      - api

  lint:
    build: './docker/lint'
    tty: true
    volumes:
      - ./api:/code/api:ro
      - ./dashboard:/code/dashboard:ro

networks:
  back:
